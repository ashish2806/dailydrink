{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/React/dailydrinks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport OrderForm from \"./components/OrderForm\";\nimport OrderList from \"./components/OrderList\";\n\nfunction App() {\n  _s();\n\n  const orderData = [{\n    id: 1,\n    name: \"ashish\",\n    price: 50,\n    description: \"surat\"\n  }];\n  const [order, setOrder] = useState(orderData);\n  const [updateData, setUpdateData] = useState([]); //add or update order\n\n  const HandleOrder = submitData => {\n    let arrData = [];\n\n    if (!submitData.id) {\n      let newData = {\n        id: Math.floor(Math.random() * 999),\n        // id generated randomally\n        name: submitData.name,\n        price: submitData.price,\n        description: submitData.description\n      };\n      arrData = [...order, newData];\n    } else {\n      let data = [...order];\n      let index = data.findIndex(obj => obj.id === submitData.id);\n      data[index] = submitData;\n      arrData = data;\n    }\n\n    setOrder(arrData);\n    setUpdateData([]);\n  }; // to populate selected order in form\n\n\n  const editHanlder = id => {\n    setUpdateData(order.find(order => order.id === id));\n  }; // to delete order\n\n\n  const deleteHanlder = id => {\n    setOrder(order.filter(order => order.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(OrderForm, {\n      HandleOrder: HandleOrder,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderList, {\n      order: order,\n      editHanlder: editHanlder,\n      deleteHanlder: deleteHanlder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dhXsZOEwSnCk+5oRoiiew3acOUc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/var/www/html/React/dailydrinks/src/App.js"],"names":["React","useState","OrderForm","OrderList","App","orderData","id","name","price","description","order","setOrder","updateData","setUpdateData","HandleOrder","submitData","arrData","newData","Math","floor","random","data","index","findIndex","obj","editHanlder","find","deleteHanlder","filter"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,SAAS,GAAG,CAChB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,WAAW,EAAE;AAJf,GADgB,CAAlB;AASA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACI,SAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C,CAXa,CAab;;AAEA,QAAMa,WAAW,GAAGC,UAAU,IAAI;AAChC,QAAIC,OAAO,GAAE,EAAb;;AACA,QAAI,CAACD,UAAU,CAACT,EAAhB,EAAoB;AAClB,UAAIW,OAAO,GAAG;AACZX,QAAAA,EAAE,EAAEY,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADQ;AAC0B;AACtCb,QAAAA,IAAI,EAAEQ,UAAU,CAACR,IAFL;AAGZC,QAAAA,KAAK,EAAEO,UAAU,CAACP,KAHN;AAIZC,QAAAA,WAAW,EAAEM,UAAU,CAACN;AAJZ,OAAd;AAMAO,MAAAA,OAAO,GAAG,CAAC,GAAGN,KAAJ,EAAWO,OAAX,CAAV;AACD,KARD,MAQO;AACL,UAAII,IAAI,GAAG,CAAC,GAAGX,KAAJ,CAAX;AACA,UAAIY,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAeC,GAAG,IAAIA,GAAG,CAAClB,EAAJ,KAAWS,UAAU,CAACT,EAA5C,CAAZ;AACAe,MAAAA,IAAI,CAACC,KAAD,CAAJ,GAAcP,UAAd;AACAC,MAAAA,OAAO,GAAGK,IAAV;AACD;;AACDV,IAAAA,QAAQ,CAACK,OAAD,CAAR;AACAH,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAlBD,CAfa,CAmCb;;;AACA,QAAMY,WAAW,GAAGnB,EAAE,IAAI;AACxBO,IAAAA,aAAa,CAACH,KAAK,CAACgB,IAAN,CAAWhB,KAAK,IAAIA,KAAK,CAACJ,EAAN,KAAaA,EAAjC,CAAD,CAAb;AACD,GAFD,CApCa,CAwCb;;;AACA,QAAMqB,aAAa,GAAGrB,EAAE,IAAI;AAC1BK,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAalB,KAAK,IAAIA,KAAK,CAACJ,EAAN,KAAaA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEQ,WAAxB;AAAqC,MAAA,UAAU,EAAEF;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,WAAW,EAAEe,WAFf;AAGE,MAAA,aAAa,EAAEE;AAHjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAtDQvB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport OrderForm from \"./components/OrderForm\";\nimport OrderList from \"./components/OrderList\";\nfunction App() {\n  const orderData = [\n    {\n      id: 1,\n      name: \"ashish\",\n      price: 50,\n      description: \"surat\"\n    }\n  ];\n\n  const [order, setOrder] = useState(orderData);\n  const [updateData, setUpdateData] = useState([]);\n\n  //add or update order\n\n  const HandleOrder = submitData => {\n    let arrData= [];\n    if (!submitData.id) {\n      let newData = {\n        id: Math.floor(Math.random() * 999),  // id generated randomally\n        name: submitData.name,\n        price: submitData.price,\n        description: submitData.description\n      };\n      arrData = [...order, newData];\n    } else {\n      let data = [...order];\n      let index = data.findIndex(obj => obj.id === submitData.id);\n      data[index] = submitData;\n      arrData = data;\n    }\n    setOrder(arrData);\n    setUpdateData([]);\n  };\n\n  // to populate selected order in form\n  const editHanlder = id => {\n    setUpdateData(order.find(order => order.id === id));\n  };\n\n  // to delete order\n  const deleteHanlder = id => {\n    setOrder(order.filter(order => order.id !== id));\n  };\n  return (\n    <div className=\"App\">\n      <OrderForm HandleOrder={HandleOrder} updateData={updateData} />\n      <OrderList\n        order={order}\n        editHanlder={editHanlder}\n        deleteHanlder={deleteHanlder}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}